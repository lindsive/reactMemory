{"ast":null,"code":"var _jsxFileName = \"/Users/lindsayiveson/Desktop/react-memory/src/components/Game/app.js\";\n// import components\nimport React, { Component } from \"react\";\nimport Planets from \"./components/Planets\";\nimport Title from \"./components/Title\";\nimport Wrapper from \"./components/Wrapper\";\nimport data from \"./planets.json.js\";\n\nclass Functionality extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data,\n      score: 0,\n      totalScore: 0\n    };\n\n    this.correctGuess = addData => {\n      let _this$state = this.state,\n          score = _this$state.score,\n          totalScore = _this$state.totalScore;\n      let newScore = score + 1;\n      let newTotalScore = Math.max(newScore, totalScore);\n      this.setState({\n        data: this.randomize(addData),\n        score: newScore,\n        totalScore: newTotalScore\n      });\n    };\n\n    this.randomize = data => {\n      for (let i = data.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * i + 1);\n        let tempArr = data[i];\n        data[i] = data[j];\n        data[j] = tempArr;\n      }\n\n      return data;\n    };\n\n    this.checkGuess = id => {\n      let correctGuess = false;\n      let counts = [];\n\n      for (let i = 0; i <= data.length; i++) {\n        if (counts[data[i]] === undefined) {\n          counts[a[i]] = 1;\n        } else {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(Wrapper, {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Memory Game\"), \"const\", this.state.data.map(planetobj => React.createElement(Planets, {\n      id: planetobj.id,\n      key: planetobj.id,\n      name: planetobj.name,\n      image: planetobj.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Functionality;","map":{"version":3,"sources":["/Users/lindsayiveson/Desktop/react-memory/src/components/Game/app.js"],"names":["React","Component","Planets","Title","Wrapper","data","Functionality","state","score","totalScore","correctGuess","addData","newScore","newTotalScore","Math","max","setState","randomize","i","length","j","floor","random","tempArr","checkGuess","id","counts","undefined","a","componentDidMount","render","map","planetobj","name","image"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAElCM,KAFkC,GAE1B;AACJF,MAAAA,IADI;AAEJG,MAAAA,KAAK,EAAE,CAFH;AAGJC,MAAAA,UAAU,EAAE;AAHR,KAF0B;;AAAA,SAYlCC,YAZkC,GAYlBC,OAAD,IAAa;AAAA,wBACI,KAAKJ,KADT;AAAA,UAClBC,KADkB,eAClBA,KADkB;AAAA,UACXC,UADW,eACXA,UADW;AAExB,UAAIG,QAAQ,GAAGJ,KAAK,GAAG,CAAvB;AACA,UAAIK,aAAa,GAAGC,IAAI,CAACC,GAAL,CAASH,QAAT,EAAmBH,UAAnB,CAApB;AAEA,WAAKO,QAAL,CAAe;AACXX,QAAAA,IAAI,EAAE,KAAKY,SAAL,CAAeN,OAAf,CADK;AAEXH,QAAAA,KAAK,EAAEI,QAFI;AAGXH,QAAAA,UAAU,EAAEI;AAHD,OAAf;AAMH,KAvBiC;;AAAA,SAyBlCI,SAzBkC,GAyBrBZ,IAAD,IAAU;AAClB,WAAK,IAAIa,CAAC,GAAGb,IAAI,CAACc,MAAL,GAAa,CAA1B,EAA6BD,CAAC,GAAG,CAAjC,EAAoCA,CAAC,EAArC,EAAyC;AACrC,YAAIE,CAAC,GAAGN,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACQ,MAAL,KAAgBJ,CAAhB,GAAoB,CAA/B,CAAR;AACA,YAAIK,OAAO,GAAGlB,IAAI,CAACa,CAAD,CAAlB;AACAb,QAAAA,IAAI,CAACa,CAAD,CAAJ,GAAUb,IAAI,CAACe,CAAD,CAAd;AACAf,QAAAA,IAAI,CAACe,CAAD,CAAJ,GAAUG,OAAV;AACH;;AACD,aAAOlB,IAAP;AACH,KAjCiC;;AAAA,SAmClCmB,UAnCkC,GAmCpBC,EAAD,IAAQ;AACjB,UAAIf,YAAY,GAAG,KAAnB;AACA,UAAIgB,MAAM,GAAG,EAAb;;AACA,WAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIb,IAAI,CAACc,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,YAAGQ,MAAM,CAACrB,IAAI,CAACa,CAAD,CAAL,CAAN,KAAoBS,SAAvB,EAAkC;AAC9BD,UAAAA,MAAM,CAACE,CAAC,CAACV,CAAD,CAAF,CAAN,GAAe,CAAf;AACH,SAFD,MAEO;AACH,iBAAO,IAAP;AACH;AACJ;;AACD,aAAO,KAAP;AACH,KA9CiC;AAAA;;AAQlCW,EAAAA,iBAAiB,GAAG,CAEnB;;AAsCDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,WAGK,KAAKvB,KAAL,CAAWF,IAAX,CAAgB0B,GAAhB,CAAoBC,SAAS,IAE1B,oBAAC,OAAD;AACI,MAAA,EAAE,EAAEA,SAAS,CAACP,EADlB;AAEI,MAAA,GAAG,EAAEO,SAAS,CAACP,EAFnB;AAGI,MAAA,IAAI,EAAEO,SAAS,CAACC,IAHpB;AAII,MAAA,KAAK,EAAED,SAAS,CAACE,KAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,CAHL,CADJ;AAgBH;;AAjEiC;;AAsEtC,eAAe5B,aAAf","sourcesContent":["// import components\nimport React, { Component } from \"react\";\nimport Planets from \"./components/Planets\";\nimport Title from \"./components/Title\";\nimport Wrapper from \"./components/Wrapper\";\nimport data from \"./planets.json.js\";\n\nclass Functionality extends Component {\n    // set initial state\n    state = {\n        data,\n        score: 0,\n        totalScore: 0\n    }\n\n    componentDidMount() {\n\n    }\n\n    correctGuess = (addData) => {\n        let { score, totalScore } = this.state;\n        let newScore = score + 1;\n        let newTotalScore = Math.max(newScore, totalScore);\n\n        this.setState ({\n            data: this.randomize(addData),\n            score: newScore,\n            totalScore: newTotalScore\n        });\n\n    }\n\n    randomize = (data) => {\n        for (let i = data.length -1; i > 0; i--) {\n            let j = Math.floor(Math.random() * i + 1);\n            let tempArr = data[i];\n            data[i] = data[j];\n            data[j] = tempArr;\n        } \n        return data;\n    }\n\n    checkGuess = (id) => {\n        let correctGuess = false;\n        let counts = []\n        for (let i = 0; i <= data.length; i++) {\n            if(counts[data[i]] === undefined) {\n                counts[a[i]] = 1;\n            } else {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    render() {\n        return (\n            <Wrapper className=\"wrapper\">\n                <Title>Memory Game</Title>\n                const \n                {this.state.data.map(planetobj => (\n                    \n                    <Planets\n                        id={planetobj.id}\n                        key={planetobj.id}\n                        name={planetobj.name}\n                        image={planetobj.image}\n                    />\n                  \n                ))}\n            </Wrapper>\n        );\n    }\n\n\n}\n\nexport default Functionality;"]},"metadata":{},"sourceType":"module"}